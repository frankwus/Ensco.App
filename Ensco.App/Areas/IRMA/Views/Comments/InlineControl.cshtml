@using Ensco.OAP.Models
@model IEnumerable<CommentModel>
@{
    GridViewOptions options = new GridViewOptions();
    options.ShowAddButton = false;
    options.ShowEditButton = false; //!ViewBag.ReadOnly;
    options.ShowDeleteButton = false; //!ViewBag.ReadOnly;
    options.ShowCommandColumn = !ViewBag.ReadOnly;
    options.AddButtonText = "";
    options.ShowTitle = true;
    options.ShowToolbar = false;
}
@Html.DevExpress().GridView(settings =>
{

    settings.Name = "gvInlineComment_" + ViewBag.QuestionId;
    settings.Caption = DbRes.T("Comments","OapResources");
    settings.KeyFieldName = "Id";

    settings.CallbackRouteValues = new { Area="IRMA", Controller="Comments", Action="InlineControl", SourceForm = ViewBag.SourceForm, SourceFormId = ViewBag.SourceFormId, QuestionId = ViewBag.QuestionId, QuestionText = ViewBag.QuestionText };
    settings.SettingsEditing.AddNewRowRouteValues = new { Area = "IRMA", Controller = "Comments", Action = "InlineControlAdd", SourceForm = ViewBag.SourceForm, SourceFormId = ViewBag.SourceFormId, QuestionId = ViewBag.QuestionId, QuestionText = ViewBag.QuestionText };
    settings.SettingsEditing.UpdateRowRouteValues = new { Area = "IRMA", Controller = "Comments", Action = "InlineControlUpdate", SourceForm = ViewBag.SourceForm, SourceFormId = ViewBag.SourceFormId, QuestionId = ViewBag.QuestionId, QuestionText = ViewBag.QuestionText };
    settings.SettingsEditing.DeleteRowRouteValues = new { Area = "IRMA", Controller = "Comments", Action = "InlineControlDelete", SourceForm = ViewBag.SourceForm, SourceFormId = ViewBag.SourceFormId, QuestionId = ViewBag.QuestionId, QuestionText = ViewBag.QuestionText };
    settings.CommandColumn.ShowNewButtonInHeader = true;

    Html.EnscoStandardGrid(settings, typeof(CommentModel), options);

    settings.Columns["Comment"].Width = Unit.Percentage(40);

    var dateColumn = (MVCxGridViewColumn)settings.Columns[6]; // Date
    dateColumn.SortIndex = 0;
    dateColumn.SortOrder = DevExpress.Data.ColumnSortOrder.Descending;

    settings.SettingsEditing.Mode = GridViewEditingMode.EditForm;
    settings.EditFormLayoutProperties.Items.Clear();
    settings.EditFormLayoutProperties.ColumnCount = 2;
    settings.EditFormLayoutProperties.Items.Add(c =>
    {
        c.Caption = DbRes.T("Comment","OapResources");
        c.ColumnName = "Comment";
    });

    var commentColumn = (MVCxGridViewColumn)settings.Columns["Comment"];
    if (commentColumn != null)
    {
        commentColumn.EditorProperties().Memo(m =>
        {
            m.Width = Unit.Percentage(100);
            m.Rows = 3;
        });
    }

    settings.EditFormLayoutProperties.Items.AddCommandItem(itemSettings =>
    {
        itemSettings.HorizontalAlign = FormLayoutHorizontalAlign.Right;
    });
    
    settings.SettingsPager.Visible = false;

    settings.CellEditorInitialize = (sender, e) =>
    {
        switch (e.Column.FieldName)
        {
            case "Comment":
                e.Editor.ReadOnly = false;
                break;
        }
    };

}).Bind(Model).GetHtml()
