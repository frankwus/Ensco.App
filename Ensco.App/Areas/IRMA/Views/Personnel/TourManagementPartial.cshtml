@model Ensco.Irma.Models.TourManagementModel

@{
    Ensco.Utilities.UserSession userInfo = Ensco.Utilities.UtilitySystem.CurrentUser;
    bool bPobEditor = (userInfo != null && userInfo.IsPobEditor) ? true : false;
}

@Html.DevExpress().GridView(grid =>
{
    grid.Name = "gridView_TourChange";
    grid.KeyFieldName = "Id";

    grid.CallbackRouteValues = new { Area="IRMA", Controller = "Personnel", Action = "TourManagementPartial" };
    grid.SettingsEditing.UpdateRowRouteValues = new { Area = "IRMA", Controller = "Personnel", Action = "TourManagementUpdatePartial" };

    grid.Styles.Header.Wrap = DefaultBoolean.True;
    grid.SettingsPager.EnableAdaptivity = true;
    grid.SettingsExport.EnableClientSideExportAPI = true;
    grid.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.DataAware;
    grid.Styles.Header.Wrap = DevExpress.Utils.DefaultBoolean.True;
    grid.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
    grid.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
    grid.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    grid.Height = System.Web.UI.WebControls.Unit.Percentage(100);
    grid.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;

    grid.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.Bottom;
    grid.SettingsPager.FirstPageButton.Visible = true;
    grid.SettingsPager.LastPageButton.Visible = true;
    grid.SettingsPager.PageSizeItemSettings.Visible = true;
    grid.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50", "100" };
    grid.SettingsPager.PageSizeItemSettings.ShowAllItem = true;

    Html.SetEnscoGridColumns(grid, typeof(Ensco.Irma.Models.TourPobModel));

    grid.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.None;
    grid.CommandColumn.ShowSelectCheckbox = bPobEditor;
    grid.ClientSideEvents.SelectionChanged = String.Format("function (s, e) {{ OnValueChanged(s, '{0}', s.GetRowKey(e.visibleIndex), e.isSelected); }}", Url.Action("TourSelected", "Personnel", new { Area = "IRMA" }));
    grid.ClientSideEvents.EndCallback = "function (s, e) { onEndCallback(s, e) }"; 
    grid.CommandColumn.Visible = bPobEditor;
    grid.SettingsEditing.Mode = GridViewEditingMode.EditForm;
    grid.EditFormLayoutProperties.ColumnCount = 3;
    grid.EditFormLayoutProperties.Items.Add("Tour");
    grid.EditFormLayoutProperties.Items.AddCommandItem(i =>
    {
        i.ShowUpdateButton = true;
        i.ShowCancelButton = true;
        i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
    });

    grid.CommandColumn.Width = 50;
    grid.CommandColumn.ShowEditButton = false;
    grid.CommandColumn.ShowUpdateButton = true;
    grid.CommandColumn.ShowCancelButton = true;
    grid.SettingsCommandButton.RenderMode = GridCommandButtonRenderMode.Image;
    grid.SettingsCommandButton.NewButton.Image.Url = "~/Images/Create.png";
    grid.SettingsCommandButton.EditButton.Image.Url = "~/Images/Edit.png";
    grid.SettingsCommandButton.EditButton.Image.Width = 16;
    grid.SettingsCommandButton.EditButton.Image.Height = 16;
    grid.SettingsCommandButton.DeleteButton.Image.Url = "~/Images/Delete.png";
    grid.SettingsCommandButton.DeleteButton.Image.Width = 16;
    grid.SettingsCommandButton.DeleteButton.Image.Height = 16;
    grid.SettingsCommandButton.UpdateButton.Image.Url = "~/Images/Save.png";
    grid.SettingsCommandButton.UpdateButton.Image.Width = 16;
    grid.SettingsCommandButton.UpdateButton.Image.Height = 16;
    grid.SettingsCommandButton.CancelButton.Image.Url = "~/Images/Cancel.png";
    grid.SettingsCommandButton.CancelButton.Image.Width = 16;
    grid.SettingsCommandButton.CancelButton.Image.Height = 16;

    grid.Toolbars.Add(toolbar =>
    {
        toolbar.Name = "toolbarTourChangePartial";
        toolbar.Enabled = true;
        toolbar.EnableAdaptivity = true;
        toolbar.Position = GridToolbarPosition.Top;
        toolbar.ItemAlign = GridToolbarItemAlign.Right;

        if (bPobEditor)
        {
            toolbar.Items.Add(item =>
            {
                item.ItemStyle.HorizontalAlign = HorizontalAlign.Right;
                item.Command = GridViewToolbarCommand.Custom;
                item.Name = "btnChangeTour";
                item.Text = "Change Tour Selected POB";
                item.ItemStyle.BackColor = System.Drawing.Color.RoyalBlue;
                item.ItemStyle.ForeColor = System.Drawing.Color.White;
                item.ItemStyle.HoverStyle.ForeColor = System.Drawing.Color.Transparent;
                item.ItemStyle.Border.BorderStyle = BorderStyle.None;
                item.ClientEnabled = true;
                //item.NavigateUrl = Url.Action("TourChange", "Personnel", new { Area = "IRMA" });
            });
        }
        toolbar.Items.Add(i =>
        {
            i.BeginGroup = true;
            i.ItemStyle.HorizontalAlign = HorizontalAlign.Left;
            i.SetTemplateContent(c =>
            {
                Html.DevExpress().ButtonEdit(s =>
                {
                    s.Name = "search";
                    s.Properties.NullText = "Search...";
                    s.Properties.Buttons
                        .Add()
                        .Image.IconID = DevExpress.Web.ASPxThemes.IconID.FindFind16x16gray;
                }).Render();
            });
        });

        toolbar.Items.Add(item =>
        {
            item.ItemStyle.HorizontalAlign = HorizontalAlign.Right;
            item.Command = GridViewToolbarCommand.Refresh;
            item.DisplayMode = GridToolbarItemDisplayMode.Image;
            item.Image.Url = "~/Images/Refresh.png";
            item.Image.Width = Unit.Pixel(24);
            item.Image.Height = Unit.Pixel(24);
            item.ItemStyle.HoverStyle.ForeColor = System.Drawing.Color.Transparent;
            item.ItemStyle.Border.BorderStyle = BorderStyle.None;
            item.ClientEnabled = true;
        });
        toolbar.Items.Add(item =>
        {
            item.ItemStyle.HorizontalAlign = HorizontalAlign.Right;
            item.Command = GridViewToolbarCommand.ShowFilterRow;
            item.DisplayMode = GridToolbarItemDisplayMode.Image;
            item.Image.Url = "~/Images/Filter.png";
            item.Image.Width = Unit.Pixel(24);
            item.Image.Height = Unit.Pixel(24);
            item.ItemStyle.HoverStyle.ForeColor = System.Drawing.Color.Transparent;
            item.ItemStyle.Border.BorderStyle = BorderStyle.None;
            item.ClientEnabled = true;
        });
        toolbar.Items.Add(item =>
        {
            item.ItemStyle.HorizontalAlign = HorizontalAlign.Right;
            item.Command = GridViewToolbarCommand.ClearFilter;
            item.DisplayMode = GridToolbarItemDisplayMode.Image;
            item.Image.Url = "~/Images/ClearFilter.png";
            item.Image.Width = Unit.Pixel(24);
            item.Image.Height = Unit.Pixel(24);
            item.ItemStyle.HoverStyle.ForeColor = System.Drawing.Color.Transparent;
            item.ItemStyle.Border.BorderStyle = BorderStyle.None;
            item.ClientEnabled = true;
        });
        //toolbar.Items.Add(item =>
        //{
        //    item.ItemStyle.HorizontalAlign = HorizontalAlign.Right;
        //    item.Command = GridViewToolbarCommand.ExportToPdf;
        //    item.DisplayMode = GridToolbarItemDisplayMode.Image;
        //    item.Image.Url = "~/Images/Pdf.png";
        //    item.Image.Width = Unit.Pixel(24);
        //    item.Image.Height = Unit.Pixel(24);
        //    item.ItemStyle.HoverStyle.ForeColor = System.Drawing.Color.Transparent;
        //    item.ItemStyle.Border.BorderStyle = BorderStyle.None;
        //    item.ClientEnabled = true;
        //});
        toolbar.Items.Add(item =>
        {
            item.ItemStyle.HorizontalAlign = HorizontalAlign.Right;
            item.Command = GridViewToolbarCommand.ExportToCsv;
            item.DisplayMode = GridToolbarItemDisplayMode.Image;
            item.Image.Url = "~/Images/Excel.png";
            item.Image.Width = Unit.Pixel(24);
            item.Image.Height = Unit.Pixel(24);
            //item.ItemStyle.HoverStyle.ForeColor = System.Drawing.Color.Transparent;
            item.ItemStyle.HoverStyle.BackColor = System.Drawing.Color.Transparent;
            item.ItemStyle.Border.BorderStyle = BorderStyle.None;
            item.ClientEnabled = true;
        });
    });
    grid.SettingsSearchPanel.CustomEditorName = "search";
    grid.ClientSideEvents.ToolbarItemClick = "function(s,e){ if(e.item.name == \"btnChangeTour\") { popupControlTourChange.Show(); } }";
    grid.SettingsExport.EnableClientSideExportAPI = true;
    grid.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.DataAware;
    grid.Styles.Header.Wrap = DevExpress.Utils.DefaultBoolean.True;
    grid.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
    grid.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
    grid.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    grid.Height = System.Web.UI.WebControls.Unit.Percentage(100);
    grid.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;


}).Bind(Model.CurrentPob).GetHtml()

@Html.Partial("TourChange", Model)


