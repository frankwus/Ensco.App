@model IEnumerable<Ensco.App.Areas.Oap.Controllers.OIMDashboardBACGridViewModel>
@Html.DevExpress().GridView(settings =>
{
    settings.Name = ViewBag.GridName;
    settings.KeyFieldName = "Id";

    settings.Settings.ShowTitlePanel = true;
    settings.SettingsText.Title = ViewBag.GridTitle;

    // Routes
    settings.CallbackRouteValues = new { Controller = "OIMOversightDashboard", Action = "BACPendingReviewPartial" };

    // Columns
    settings.Columns.Add(c =>
    {
        c.FieldName = "Id";
        c.Width = Unit.Percentage(5);
        c.SetDataItemTemplateContent(container =>
        {
            Html.DevExpress().HyperLink(link =>
            {
                link.Name = string.Format("lnk_{0}_{1}", settings.Name, (int)DataBinder.Eval(container.DataItem, "Id"));
                link.Properties.Text = DataBinder.Eval(container.DataItem, "Id").ToString();
                link.NavigateUrl = Url.Action("List", ViewBag.GridLinkController , new { Id = DataBinder.Eval(container.DataItem, "ChecklistGuid") });
            }).Render();
        });
    });
    settings.Columns.Add("Assessor").Width = Unit.Percentage(15);
    settings.Columns.Add("Position").Width = Unit.Percentage(15);
    settings.Columns.Add("Location").Width = Unit.Percentage(15);
    settings.Columns.Add(c => {
        c.FieldName = "Date";
        c.Width = Unit.Percentage(10);
        c.PropertiesEdit.DisplayFormatString = "dd-MMM-yyyy";
    });

    for (int i = 1; i < 8; i++)
    {
        settings.Columns.AddBand(band =>
        {
            band.Caption = string.Format("Day {0}", i) ;
            band.Columns.Add(c =>
            {
                c.FieldName = string.Format("Day{0}.Conformity", i);
                c.Caption = "C";
                c.Width = Unit.Percentage(2);
                c.SetDataItemTemplateContent(container =>
                {
                    ViewContext.Writer.Write(""); // TODO: Finish BAC Checklist and add functionality here
                });
            });

            band.Columns.Add(c =>
            {
                c.FieldName = string.Format("Day{0}.ConformityCount", i);
                c.Caption = "N";
                c.Width = Unit.Percentage(2);
                c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            });
        });
    }

    // Filter
    settings.Settings.ShowHeaderFilterButton = true;

    // Paging
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };

    // Style
    settings.Width = Unit.Percentage(100);

}).Bind(Model).GetHtml()
